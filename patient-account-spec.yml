openapi: 3.0.1
info:
  title: Patient-Account
  description: Patient account specification to define the patient account API
  contact:
    email: suport@estiatraining.com
  version: 1.0.0
servers:
  - url: https://localhost:8080/v1
    description: Production server
tags:
  - name: patients
    description: Patient Account
paths:
  /patients:
    get:
      summary: Retrieve all patients
      tags:
        - patients
      security:
        - BearerAuth
      operationId: getAllPatients
      responses:
        200:
          $ref: '#/components/responses/SuccessGetAll'
        401:
          $ref: '#/components/responses/Unauthorized'                         
        500:
          $ref: '#/components/responses/ServerError'  
  /patient:                
    post:
      summary: Create a new patient
      tags:
        - patients      
      security:
        - BearerAuth
      operationId: createPatientAccount
      requestBody:
        $ref: '#/components/requestBody/patientBody'         
      responses:
        201:
          $ref: '#/components/responses/Created'
        401:
          $ref: '#/components/responses/Unauthorized'                          
        500:
          $ref: '#/components/responses/ServerError'         
  /patient/{id}:                
    get:
      summary: Get a patient by ID
      tags:
        - patients      
      security:
        - BearerAuth
      operationId: getPatientById
      parameters:
        - name: id
          in: path
          description: Patient ID
          required: true
          schema:
            type: integer
            format: int64     
      responses:
        200:
          $ref: '#/components/responses/Success'
        401:
          $ref: '#/components/responses/Unauthorized'    
        404:
          $ref: '#/components/responses/NotFound'                                  
        500:
          $ref: '#/components/responses/ServerError'                                                                    
    put:
      summary: Update a patient by ID
      tags:
        - patients      
      security:
        - BearerAuth
      operationId: updatePatientById
      parameters:
        - name: id
          in: path
          description: Patient ID
          required: true
          schema:
            type: integer
            format: int64        
      requestBody:
        $ref: '#/components/requestBody/patientBody'         
      responses:
        202:
          $ref: '#/components/responses/Accepted'
        401:
          $ref: '#/components/responses/Unauthorized'    
        404:
          $ref: '#/components/responses/NotFound'                                  
        500:
          $ref: '#/components/responses/ServerError'       
    delete:
      summary: Delete a patient by ID
      tags:
        - patients      
      security:
        - BearerAuth
      operationId: deletePatientById
      parameters:
        - name: id
          in: path
          description: Patient ID
          required: true
          schema:
            type: integer
            format: int64               
      responses:   
        204:
          description: No Content
        401:
          $ref: '#/components/responses/Unauthorized'    
        404:
          $ref: '#/components/responses/NotFound'                                  
        500:
          $ref: '#/components/responses/ServerError'          
components:
  schemas:
    requestBody:
      required:      
        - firstName
        - lastName 
        - dateBirth               
        - gender
        - phoneNumber
        - user
      type: object
      properties:
        dateBirth:
          type: string
          format: date
          minimum: 10
          example: 10/02/2010
        firstName:          
          type: string
          minimum: 2
          example: 'Cleison'
        lastName:          
          type: string
          minimum: 2
          example: 'Melo'   
        phoneNumber:
          type: number 
          format: int32
          example: 555-6563-5623
        gender:
          type: string
          example: M
          enum:
            - M
            - F      
        user:
          $ref: '#/components/schemas/user'                         
    patient:
      required:    
        - id  
        - firstName
        - lastName 
        - dateBirth               
        - gender
        - phoneNumber
        - user
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1       
        dateBirth:
          type: string
          format: date
          minimum: 10
          example: 10/02/2010
        firstName:          
          type: string
          minimum: 2
          example: 'Cleison'
        lastName:          
          type: string
          minimum: 2
          example: 'Melo'   
        phoneNumber:
          type: number 
          format: int32
          example: 555-6563-5623
        gender:
          type: string
          example: M
          enum:
            - M
            - F   
        user:
          $ref: '#/components/schemas/user'              
    user:
      required:
        - id
        - email        
      type: object
      properties:
        email:
          type: string
          format: email
          minimum: 10
          example: suport@estiatraining.com      
        id:
          type: integer
          format: int64
          example: 1                
    body_response_error:
      required:
        - code_error
        - message        
      type: object
      properties:
        code_error:
          type: integer 
          format: int64
          minimum: 1
          example: 13216       
        message:
          type: string
          example: message_to_show    
  requestBody:
    patientBody:
      description: Patient JSON object required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestBody'           
  responses:          
    Success:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patient'
    Created:
      description: Created
      content:
        application/json: 
          schema:
            $ref: '#/components/schemas/patient'     
    Accepted:
      description: Accepted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/patient'              
    SuccessGetAll:
      description: OK
      content:
        application/json:
          schema:
            type: array
            items:
              oneOf:
               - $ref: '#/components/schemas/patient'   
               - $ref: '#/components/schemas/patient'                          
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'          
    Unauthorized:
      description: Unauthorized error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'            
    Forbidden:
      description: Forbidden error    
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'                  
    ServerError:
      description: Server error      
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'       
    NotFound:
      description: Not found      
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'                          
  securitySchemes:                               
    BearerAuth:
      type: http
      scheme: bearer  
      bearerFormat: JWT