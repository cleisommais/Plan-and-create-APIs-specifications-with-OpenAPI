openapi: 3.0.1
info:
  title: User-Account
  description: User Authentication specification to define the user log into API
  contact:
    email: suport@estiatraining.com
  version: 1.0.0
servers:
  - url: https://localhost:8080/v1
    description: Production server
tags:
  - name: auth
    description: User Authentication
paths:
  /login:                
    post:
      summary: Authentication of the user
      tags:
        - auth      
      security:
        - BearerAuth
      operationId: loginUser
      requestBody:
        $ref: '#/components/requestBody/userBody'   
      responses:
        200:
          $ref: '#/components/responses/Success'  
        404:
          $ref: '#/components/responses/NotFound'                              
        500:
          $ref: '#/components/responses/ServerError'       
components:
  schemas:
    requestBody:
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
          format: email
          pattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
          minimum: 10
          example: suport@estiatraining.com
        password:
          minimum: 1
          type: string
          format: password
          example: '123'
    user:
      required:
        - id
        - email        
      type: object
      properties:
        email:
          type: string
          format: email
          minimum: 10
          example: suport@estiatraining.com      
        id:
          type: integer
          format: int64
          example: 1  
    body_response_error:
      required:
        - code_error
        - message        
      type: object
      properties:
        code_error:
          type: integer
          format: int64
          minimum: 1
          example: 13216      
        message:
          type: string
          example: message_to_show    
  requestBody:
    userBody:
      description: User JSON object required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/requestBody'             
  responses:          
    Success:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/user'       
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'                        
    ServerError:
      description: Server error      
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'       
    NotFound:
      description: Not found      
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/body_response_error'                          